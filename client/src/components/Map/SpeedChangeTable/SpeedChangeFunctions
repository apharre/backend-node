/** maybe use this as a function? */

/**
useEffect(() => {
  let cancel;
  setLoading(true);
  const fetchData = async () => {
    try {
      let query;
      if (params && !urlQuery) {
        query = params;
      } else {
        query = urlQuery;
      }
      const { data } = await axios({
        method: GET,
        url: `/vehicles${query}`,
        // eslint-disable-next-line no-undef, no-return-assign
        cancelToken: new axios.CancelToken((c) => (cancel = c)),
      });
      setVehicleData(data.data);
      setLoading(false);
    } catch (error) {
      console.log(error.response.data);
    }
  };
  fetchData();

  return () => cancel();
  // When chartFilters changes, call the API again
}, [chartFilters, params]);
*/
